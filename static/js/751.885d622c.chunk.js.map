{"version":3,"file":"static/js/751.885d622c.chunk.js","mappings":"mTAOaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0EAMhBC,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAmBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kMAY1BI,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAmBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oJAS3BO,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6CAK5BU,EAASZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4M,mIC3B7BY,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,OAAOC,SAAS,YACxDC,MAAON,EAAAA,KAAaG,IAAI,EAAG,cAAcC,OAAOC,SAAS,YACzDE,SAAUP,EAAAA,KAAaG,IAAI,EAAG,cAAcC,OAAOC,SAAS,cAGjDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC9B,EAAAA,GAAI,CAAA6B,SAAC,oBACNC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbd,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZU,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAQC,GACjBX,GACEY,EAAAA,EAAAA,IAAS,CACPnB,KAAMiB,EAAOjB,KACbI,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,YAGrBa,EAAQE,WACV,EAAET,UAEFF,EAAAA,EAAAA,MAACvB,EAAAA,GAAI,CAAAyB,SAAA,EACHC,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,OAAMV,SAAC,UACtBC,EAAAA,EAAAA,KAACvB,EAAAA,GAAK,CAACiC,GAAG,OAAOtB,KAAK,UACtBY,EAAAA,EAAAA,KAACpB,EAAAA,GAAY,CAACQ,KAAK,OAAOuB,UAAU,UAEpCX,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,QAAOV,SAAC,WACvBC,EAAAA,EAAAA,KAACvB,EAAAA,GAAK,CAACiC,GAAG,QAAQtB,KAAK,WACvBY,EAAAA,EAAAA,KAACpB,EAAAA,GAAY,CAACQ,KAAK,QAAQuB,UAAU,UAErCX,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,WAAUV,SAAC,cAC1BC,EAAAA,EAAAA,KAACvB,EAAAA,GAAK,CAACiC,GAAG,WAAWtB,KAAK,WAAWwB,KAAK,cAC1CZ,EAAAA,EAAAA,KAACpB,EAAAA,GAAY,CAACQ,KAAK,WAAWuB,UAAU,UAExCX,EAAAA,EAAAA,KAACjB,EAAAA,GAAM,CAAC6B,KAAK,SAAQb,SAAC,mBAKhC,ECzDe,SAASc,IACvB,OACEb,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACN,EAAY,KAGlB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import {\n  Field as ContactInfo,\n  Form as FormWrapper,\n  ErrorMessage as Error,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Text = styled.h3`\n  text-align: center;\n  margin-top: 60px;\n  font-size: 28px;\n`;\n\nexport const Form = styled(FormWrapper)`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  max-width: 456px;\n  padding: 20px;\n  font-size: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 12px;\n`;\n\nexport const Field = styled(ContactInfo)`\n  max-width: 100%;\n  font-size: 24px;\n  background-color: white;\n  padding: 8px;\n  border: 1px solid #e2e6e9;\n  border-radius: 8px;\n`;\n\nexport const ErrorMessage = styled(Error)`\n  color: red;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  background-color: #2F4F4F;\n  color: white;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: black;\n  }\n`;","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport * as Yup from 'yup';\nimport {\n  Text,\n  ErrorMessage,\n  Field,\n  Form,\n  Button,\n} from './RegisterForm.styled';\n\nconst quizSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').trim().required('Required'),\n  email: Yup.string().min(3, 'Too Short!').trim().required('Required'),\n  password: Yup.string().min(8, 'Too Short!').trim().required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Text>Create Account</Text>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={quizSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            register({\n              name: values.name,\n              email: values.email,\n              password: values.password,\n            })\n          );\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <label htmlFor=\"name\">Name</label>\n          <Field id=\"name\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n\n          <label htmlFor=\"email\">Email</label>\n          <Field id=\"email\" name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"span\" />\n\n          <label htmlFor=\"password\">Password</label>\n          <Field id=\"password\" name=\"password\" type=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" />\n\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n        </Formik>\n    </>\n  );\n};","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nexport default function RegisterPage() {\n return (\n   <div>\n     <RegisterForm />\n   </div>\n );\n}"],"names":["Text","styled","_templateObject","_taggedTemplateLiteral","Form","FormWrapper","_templateObject2","Field","ContactInfo","_templateObject3","ErrorMessage","Error","_templateObject4","Button","_templateObject5","quizSchema","Yup","shape","name","min","trim","required","email","password","RegisterForm","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","htmlFor","id","component","type","RegisterPage"],"sourceRoot":""}