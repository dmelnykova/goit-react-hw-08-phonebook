{"version":3,"file":"static/js/980.ea441fa3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","helpers/findDuplicates.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/FilterField/Filter.styled.js","components/FilterField/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as ContactInfo,\n  Form as FormWrapper,\n  ErrorMessage as Error,\n} from 'formik';\n\nexport const Form = styled(FormWrapper)`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const Field = styled(ContactInfo)`\n    font-size: 25px;\n    padding: 8px;\n    border: 2px solid #4078a5;\n    border-radius: 8px;\n`;\n\nexport const ErrorMessage = styled(Error)`\n    color: red;\n    font-size: 20px;\n`;\n\nexport const Button = styled.button`\n    width: 100%;\n    background-color: #4078a5;\n    color: white;\n    padding: 10px;\n    border-radius: 6px;\n    cursor: pointer;\n    margin-top: 6px;\n    font-size: 22px;\n    border: none;\n\n    &:hover {\n        background-color: black;\n    }\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterQuery) => {\n    const visible = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n    );\n    return visible;\n  }\n);","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Button, Field, ErrorMessage } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { findDuplicates } from '../../helpers/findDuplicates';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'Phone number must be min 5 numbers (1234567 or 123-45-67)'\n    )\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = values => {\n    const isDuplicate = findDuplicates(contacts, values);\n\n    if (isDuplicate) {\n      return;\n    }\n\n    dispatch(addContact(values)); \n  };\n\n  return (\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={(values, actions) => {\n          handleAddContact(values);\n          actions.resetForm();\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange }) => (\n          <Form>\n            <Field\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Name\"\n              value={values.name}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"name\" component=\"span\" />\n\n            <Field\n              id=\"number\"\n              name=\"number\"\n              placeholder=\"Number\"\n              value={values.number}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"number\" component=\"span\" />\n\n            <Button type=\"submit\">Add contact</Button>\n          </Form>\n        )}\n      </Formik>\n  );\n};\n","import toast from 'react-hot-toast';\n\nexport const findDuplicates = (contacts, newContact) => {\n  const isDuplicateName = contacts.some(\n    contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n  );\n\n  const isDuplicateNumber = contacts.some(\n    contact => contact.number === newContact.number\n  );\n\n  if (isDuplicateName) {\n    toast.error(`'${newContact.name}' is already in contacts.`);\n    return newContact;\n  }\n\n  if (isDuplicateNumber) {\n    toast.error(\n      `Number '${newContact.number}' is already saved under the name '${newContact.name}'`\n    );\n    return newContact;\n  }\n};","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n\nexport const Span = styled.span`\n  line-height: 48px;\n  padding-right: 12px;\n  font-size: 18px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 24px;\n  text-align: center;\n  font-size: 12px bold;\n  background-color: white;\n  border: transparent;\n  border-radius: 8px;\n  &:hover {\n    background-color: #ffffff;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Item, Span, Btn } from './ContactsList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <Item key={id}>\n              <Span>{name}:</Span>\n              <Span>{number}</Span>\n              <Btn onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Btn>\n            </Item>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n    display: inline-flex;\n    flex-direction: column;\n    width: 250px;\n    margin-left: 50px;\n    gap: 10px;\n    font-size: 18px;\n    font-weight: 500;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrapper } from './Filter.styled';\nimport { changeFilter } from '../../redux/filter/filterSlice';\n\nexport const FilterField = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      Filter contacts by name:\n      <input\n        name=\"filter\"\n        type=\"text\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n      />\n    </FilterWrapper>\n  );\n};","import styled from \"styled-components\";\n\nexport const PhoneFormWrapper = styled.div`\n  margin-top: 70px;\n  margin-left: 170px;\n  margin-right: auto;\n  display: flex;\n`;\n\n","import { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { ContactsList } from \"../../components/ContactsList/ContactsList\";\nimport { FilterField } from \"../../components/FilterField/Filter\";\nimport { PhoneFormWrapper } from \"./ContactsPage.styled\";\n\nexport default function ContactPage() {\n  return (\n    <PhoneFormWrapper>\n      {/* <h2>New Contact</h2> */}\n      <ContactForm />\n      {/* <Text>Phonebook</Text> */}\n      <FilterField />\n      <ContactsList />\n    </PhoneFormWrapper>\n  );\n}"],"names":["Form","styled","FormWrapper","_templateObject","_taggedTemplateLiteral","Field","ContactInfo","_templateObject2","ErrorMessage","Error","_templateObject3","Button","_templateObject4","selectContacts","state","contacts","items","selectVisibleContacts","createSelector","filter","filterQuery","contact","name","toLowerCase","includes","validationSchema","Yup","shape","min","required","number","matches","ContactForm","useSelector","dispatch","useDispatch","handleAddContact","values","isDuplicate","newContact","isDuplicateName","some","isDuplicateNumber","toast","concat","findDuplicates","addContact","_jsx","Formik","initialValues","onSubmit","actions","resetForm","children","_ref","handleChange","_jsxs","id","placeholder","value","onChange","component","type","Item","Span","Btn","ContactsList","map","onClick","deleteContact","FilterWrapper","FilterField","event","changeFilter","target","PhoneFormWrapper","ContactPage"],"sourceRoot":""}