{"version":3,"file":"static/js/937.4a4746fa.chunk.js","mappings":"mQAOaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2LAUpBC,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAkBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2EAezBI,IATQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAmBQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8BAIZF,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAmBU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAKzBF,EAAAA,GAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yP,oBC9BtBU,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAQ/CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACL,EAPyB,SAAAC,GAAK,OAAIA,EAAMK,MAAO,IAQhD,SAACJ,EAAUK,GAIT,OAHgBL,EAASI,QAAO,SAAAE,GAAO,OACrCA,EAAQC,KAAKC,cAAcC,SAASJ,EAAYG,cAAc,GAGlE,I,6BCTIE,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CL,KAAMI,EAAAA,KAAaE,IAAI,EAAG,cAAcC,SAAS,YACjDC,OAAQJ,EAAAA,KACLK,QACC,gDACA,6DAEDF,SAAS,eAGDG,EAAc,WACzB,IAAMjB,GAAWkB,EAAAA,EAAAA,IAAYpB,GACvBqB,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,KAACpC,EAAO,CAAAqC,UACND,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CACbjB,KAAM,GACNQ,OAAQ,IAEVU,SAAU,SAACC,EAAQC,IApBA,SAAAD,GACF1B,EAAS4B,MAC5B,SAAAtB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBkB,EAAOnB,KAAKC,aAAa,IAInEqB,EAAAA,OAAAA,QAAwB,8BAA8B,GAADC,OAAKJ,EAAOnB,KAAI,6BAIvEY,GAASY,EAAAA,EAAAA,IAAWL,GACtB,CAUQM,CAAiBN,GACjBC,EAAQM,WACV,EACAvB,iBAAkBA,EAAiBY,SAElC,SAAAY,GAAA,IAAGR,EAAMQ,EAANR,OAAQS,EAAYD,EAAZC,aAAY,OACtBC,EAAAA,EAAAA,MAAC/C,EAAI,CAAAiC,SAAA,EACHD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,UACPD,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,GAAG,OACH/B,KAAK,OACLgC,YAAY,MACZC,MAAOd,EAAOnB,KACdkC,SAAUN,KAEZd,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAACnC,KAAK,OAAOoC,UAAU,UAEpCtB,EAAAA,EAAAA,KAAA,SAAAC,SAAO,YACPD,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,GAAG,SACH/B,KAAK,SACLgC,YAAY,YACZC,MAAOd,EAAOX,OACd0B,SAAUN,KAEZd,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAACnC,KAAK,SAASoC,UAAU,UAEtCtB,EAAAA,EAAAA,KAAC7B,EAAM,CAACoD,KAAK,SAAQtB,SAAC,kBACjB,KAKjB,EC1EauB,EAAO3D,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAIhB0D,EAAO5D,EAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4EAMlB2D,EAAM7D,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uSCAnB4D,EAAe,WAC1B,IAAM7B,GAAWC,EAAAA,EAAAA,MACXpB,GAAWkB,EAAAA,EAAAA,IAAYhB,GAE7B,OACEmB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGtB,EAASiD,KAAI,SAAA3C,GACZ,IAAQgC,EAAqBhC,EAArBgC,GAAI/B,EAAiBD,EAAjBC,KAAMQ,EAAWT,EAAXS,OAElB,OACEqB,EAAAA,EAAAA,MAACS,EAAI,CAAAvB,SAAA,EACHc,EAAAA,EAAAA,MAACU,EAAI,CAAAxB,SAAA,CAAEf,EAAK,QACZc,EAAAA,EAAAA,KAACyB,EAAI,CAAAxB,SAAEP,KACPM,EAAAA,EAAAA,KAAC0B,EAAG,CAACG,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcb,GAAI,EAAChB,SAAC,aAHxCgB,EAQf,OAIR,E,oBC/Bac,EAAc,WAEzB,IAAMjC,GAAWC,EAAAA,EAAAA,MACjB,OACEgB,EAAAA,EAAAA,MAACiB,EAAAA,cAAa,CAAA/B,SAAA,CAAC,4BAEbD,EAAAA,EAAAA,KAAA,SACEd,KAAK,SACLqC,KAAK,OAELH,SAAU,SAAAa,GAAK,OAAInC,GAASoC,EAAAA,EAAAA,IAAaD,EAAME,OAAOhB,OAAO,MAIrE,EChBaiB,EAAmBvE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gMCG3B,SAASsE,IACtB,OACEtB,EAAAA,EAAAA,MAACqB,EAAgB,CAAAnC,SAAA,EACfD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAC+B,EAAW,KACZ/B,EAAAA,EAAAA,KAAC2B,EAAY,MAGnB,C","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/FilterField/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n    Form as FormikForm,\n    Field as FormikField,\n    ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Wrapper = styled.div`\n    width: 400px;\n    margin-top: 50px;\n    margin-left: 50px;\n    padding: 15px;\n    border: 1px solid black;\n    border-radius: 20px;\n    background-color: whitesmoke;\n`;\n\nexport const Form = styled(FormikForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`;\n\nexport const Field = styled(FormikField)`\n    padding: 5px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n    color: orange;\n    font-size: 24px;\n`;\n\nexport const Button = styled.button`\n    height: 35px;\n    background-color: tan;\n    border-radius: 20px;\n    transition: background-color 0.3s ease, color 0.5s ease;\n    &:hover,\n    &:focus {\n    color: white;\n    background-color: steelblue;\n    outline: none;}\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterQuery) => {\n    const visible = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n    );\n    return visible;\n  }\n);","import { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Wrapper, Form, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport * as Notiflix from 'notiflix';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'Phone number must be min 5 numbers (1234567 or 123-45-67)'\n    )\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = values => {\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (checkContact) {\n      Notiflix.Report.warning('Contact has not been added.', `${values.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(values)); \n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={(values, actions) => {\n          handleAddContact(values);\n          actions.resetForm();\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange }) => (\n          <Form>\n            <label>Name</label>\n            <Field\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Tom\"\n              value={values.name}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"name\" component=\"span\" />\n\n            <label>Number</label>\n            <Field\n              id=\"number\"\n              name=\"number\"\n              placeholder=\"000-00-00\"\n              value={values.number}\n              onChange={handleChange}\n            />\n            <ErrorMessage name=\"number\" component=\"span\" />\n\n            <Button type=\"submit\">Add contact</Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n`;\n\nexport const Span = styled.span`\n  line-height: 48px;\n  padding-right: 12px;\n  font-size: 18px;\n`;\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 24px;\n  text-align: center;\n  font-size: 12px bold;\n  background-color: white;\n  border: transparent;\n  border-radius: 8px;\n  &:hover {\n    background-color: #ffffff;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Item, Span, Btn } from './ContactsList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n// import {\n//   selectError,\n//   selectIsLoading,\n//   selectfilteredContacts,\n// } from 'redux/contacts/selectors';\n// import { selectVisibleContacts } from '../../redux/selectors';\n\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <Item key={id}>\n              <Span>{name}:</Span>\n              <Span>{number}</Span>\n              <Btn onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Btn>\n            </Item>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};","import { useDispatch } from 'react-redux';\nimport { FilterWrapper } from './Filter.styled';\nimport { changeFilter } from '../../redux/filter/filterSlice';\n\nexport const FilterField = () => {\n  // const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      Filter contacts by name:\n      <input\n        name=\"filter\"\n        type=\"text\"\n        // value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n      />\n    </FilterWrapper>\n  );\n};","import styled from \"styled-components\";\n\nexport const PhoneFormWrapper = styled.div`\n  max-width: 70%;\n  background-color: ivory;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;","import { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { ContactsList } from \"../../components/ContactsList/ContactsList\";\nimport { FilterField } from \"../../components/FilterField/Filter\";\nimport { PhoneFormWrapper } from \"./ContactsPage.styled\";\n\nexport default function ContactPage() {\n  return (\n    <PhoneFormWrapper>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <FilterField />\n      <ContactsList />\n    </PhoneFormWrapper>\n  );\n}"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Form","FormikForm","_templateObject2","Button","FormikField","_templateObject3","FormikError","_templateObject4","_templateObject5","selectContacts","state","contacts","items","selectVisibleContacts","createSelector","filter","filterQuery","contact","name","toLowerCase","includes","validationSchema","Yup","shape","min","required","number","matches","ContactForm","useSelector","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","some","Notiflix","concat","addContact","handleAddContact","resetForm","_ref","handleChange","_jsxs","Field","id","placeholder","value","onChange","ErrorMessage","component","type","Item","Span","Btn","ContactsList","map","onClick","deleteContact","FilterField","FilterWrapper","event","changeFilter","target","PhoneFormWrapper","ContactPage"],"sourceRoot":""}